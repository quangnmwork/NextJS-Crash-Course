{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React js\\\\Next JS Big project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://quang:123@cluster0.bfxk8.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //     {\n    //         params:{\n    //             meetupId:'m1'\n    //         }\n    //     },\n    //     {\n    //         params:{\n    //             meetupId:'m2'\n    //         }\n    //     }\n    // ]\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://quang:123@cluster0.bfxk8.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetUpId\n  });\n  client.close();\n  return {\n    meetupData: selectedMeetup\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/React js/Next JS Big project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetUpId","selectedMeetup","findOne"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC3B,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAIA,KAAK,CAACC,UAAN,CAAiBC,KAAxC;AACP,IAAA,KAAK,EAAIF,KAAK,CAACC,UAAN,CAAiBE,KADnB;AAEP,IAAA,OAAO,EAAIH,KAAK,CAACC,UAAN,CAAiBG,OAFrB;AAGP,IAAA,WAAW,EAAIJ,KAAK,CAACC,UAAN,CAAiBI;AAHzB;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;AACD,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,wFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAC,KADN;AAEHC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AAAR,KAAL,CAAlB,CAFH,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdG,GAAP;AAgBH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,wFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMgB,cAAc,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AAACd,IAAAA,GAAG,EAACY;AAAL,GAA1B,CAA7B;AACAnB,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHf,IAAAA,UAAU,EAAC0B;AADR,GAAP;AAGH;AACD,eAAe5B,aAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\nfunction MeetupDetails (props) {\r\n    return <MeetupDetail image = {props.meetupData.image}\r\n    title = {props.meetupData.title}\r\n    address = {props.meetupData.address}\r\n    description = {props.meetupData.description}/>\r\n}\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://quang:123@cluster0.bfxk8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n    client.close();\r\n    return {\r\n        fallback:false,\r\n        paths:meetups.map(meetup => ({params:{meetupId:meetup._id.toString()}}))\r\n        // [\r\n        //     {\r\n        //         params:{\r\n        //             meetupId:'m1'\r\n        //         }\r\n        //     },\r\n        //     {\r\n        //         params:{\r\n        //             meetupId:'m2'\r\n        //         }\r\n        //     }\r\n        // ]\r\n    }\r\n}\r\nexport async function getStaticProps(context){\r\n    const meetUpId = context.params.meetupId;\r\n    const client = await MongoClient.connect('mongodb+srv://quang:123@cluster0.bfxk8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const selectedMeetup = await meetupsCollection.findOne({_id:meetUpId});\r\n    client.close();\r\n    return { \r\n        meetupData:selectedMeetup\r\n    }\r\n}\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}